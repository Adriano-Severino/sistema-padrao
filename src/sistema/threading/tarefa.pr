espaco Sistema.Threading 
{
    publico classe Tarefa 
    {
        privado nativo_tarefa _tarefa;
        
        // Construtor privado
        privado Tarefa(nativo_tarefa tarefa) 
        {
            este._tarefa = tarefa;
        }
        
        // Inicia uma nova tarefa
        publico estática Tarefa Iniciar(acao acao) 
        {
            var t = nativo_tarefa_iniciar(acao);
            retorne novo Tarefa(t);
        }
        
        // Aguarda a conclusão da tarefa
        publico vazio Aguardar() 
        {
            nativo_tarefa_aguardar(este._tarefa);
        }
        
        // Verifica se a tarefa foi concluída
        publico booleano Concluida 
        {
            obter { retorne nativo_tarefa_concluida(este._tarefa); }
        }
        
        // Resultado da tarefa (para tarefas com retorno)
        publico generico static Tarefa<T> Iniciar<T>(funcao<T> func) 
        {
            var t = nativo_tarefa_iniciar_func(func);
            retorne novo Tarefa<T>(t);
        }
    }
    
    publico classe Tarefa<T> 
    {
        privado nativo_tarefa _tarefa;
        
        privado Tarefa(nativo_tarefa tarefa) 
        {
            este._tarefa = tarefa;
        }
        
        publico T Resultado 
        {
            obter { retorne nativo_tarefa_resultado<T>(este._tarefa); }
        }
        
        publico vazio Aguardar() 
        {
            nativo_tarefa_aguardar(este._tarefa);
        }
        
        publico booleano Concluida 
        {
            obter { retorne nativo_tarefa_concluida(este._tarefa); }
        }
    }
}
