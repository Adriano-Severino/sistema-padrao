espaco Sistema.Rede {
    publico enum TipoSocket {
        Tcp,
        Udp
    }
    
    publico classe Socket {
        privado nativo_socket _socket;
        publico TipoSocket Tipo { obter; }
        
        publico Socket(TipoSocket tipo) {
            este.Tipo = tipo;
            este._socket = nativo_criar_socket(tipo);
        }
        
        // Conectar a um host/remoto
        publico vazio Conectar(texto endereco, inteiro porta) {
            nativo_socket_conectar(este._socket, endereco, porta);
        }
        
        // Escutar em uma porta (apenas TCP)
        publico vazio Escutar(inteiro porta, inteiro backlog = 10) {
            nativo_socket_escutar(este._socket, porta, backlog);
        }
        
        // Aceitar conex√£o (apenas TCP)
        publico Socket Aceitar() {
            var novoSocket = nativo_socket_aceitar(este._socket);
            var s = novo Socket(TipoSocket.Tcp);
            s._socket = novoSocket;
            retorne s;
        }
        
        // Enviar dados
        publico inteiro Enviar(bytes dados) {
            retorne nativo_socket_enviar(este._socket, dados);
        }
        
        // Receber dados
        publico bytes Receber(inteiro tamanho) {
            retorne nativo_socket_receber(este._socket, tamanho);
        }
        
        // Fechar socket
        publico vazio Fechar() {
            nativo_socket_fechar(este._socket);
        }
    }
}
